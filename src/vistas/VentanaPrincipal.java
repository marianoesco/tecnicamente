/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controladores.ControladoraPrincipal;
import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.NivelDeUsuario;
import modelo.Permiso;
import modelo.Usuario;

/**
 *
 * @author EcobarM
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    private ControladoraPrincipal cp;
    private Usuario usuario;

    public VentanaPrincipal(ControladoraPrincipal cp, Usuario usuario) {
  
        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setIconImage(getIconImage());
        this.cp = cp;
        this.usuario = usuario;

        initComponents();
        
        this.setTitle("Accediste como - " + this.usuario.getNombreUsuario());

        NivelDeUsuario nivel = (this.cp.getControladoraLogueo().buscarNivelPorCodigo(this.usuario.getNivel().getCodigo()));

        Permiso permisos = nivel.getPermiso();

              
        //VALIDAMOS LOS PERMISOS SEGUN EL NIVEL DE USUARIO;//
        //VALIDAMOS PERMISOS PARA PARAMETROS//
        if (permisos.isGestionParametro() == true) {
            mnu_parametrosVP.setEnabled(isEnabled());
        } else {
            mnu_parametrosVP.setEnabled(!isEnabled());
        }

        if (permisos.isGestionServicio() == true) {
            mnu_serviciosVP.setEnabled(isEnabled());
        } else {
            mnu_serviciosVP.setEnabled(isEnabled());
        }

        if (permisos.isGestionCliente() == true) {
            mnu_clienteVP.setEnabled(isEnabled());
        } else {
            mnu_clienteVP.setEnabled(!isEnabled());
        }

        if (permisos.isGestionCompra() == true) {
            mnu_compraVP.setEnabled(isEnabled());
        } else {
            mnu_compraVP.setEnabled(!isEnabled());
        }

        if (permisos.isGestionEquipo() == true) {
            mnu_equiposVP.setEnabled(isEnabled());
        } else {
            mnu_equiposVP.setEnabled(!isEnabled());
        }

        if (permisos.isGestionInforme() == true) {
            mnu_informesVP.setEnabled(isEnabled());
        } else {
            mnu_informesVP.setEnabled(!isEnabled());
        }

        if (permisos.isGestionServicioTecnico() == true) {
            mnu_servicioTecnicoVP.setEnabled(isEnabled());
        } else {
            mnu_servicioTecnicoVP.setEnabled(!isEnabled());
        }

        if (permisos.isGestionUsuario() == true) {
            mnu_usuarioVP.setEnabled(isEnabled());
        } else {
            mnu_usuarioVP.setEnabled(!isEnabled());

        }

        if (permisos.isGestionVenta() == true) {
            mnu_ventaVP.setEnabled(isEnabled());
        } else {
            mnu_ventaVP.setEnabled(!isEnabled());
        }

        if (permisos.isGestionProducto() == true) {
            mnu_producto_VP.setEnabled(isEnabled());
        } else {
            mnu_producto_VP.setEnabled(!isEnabled());
        }

    }

    @Override
    public Image getIconImage() {
      return Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/logo-100.png"));
    }

    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_centralVP = new javax.swing.JPanel();
        dskp_principalVP = new javax.swing.JDesktopPane();
        mnub_listadoVP = new javax.swing.JMenuBar();
        mnu_parametrosVP = new javax.swing.JMenu();
        mnui_localidadesVP = new javax.swing.JMenuItem();
        mnui_provinciasVP = new javax.swing.JMenuItem();
        mnui_nivelesVP = new javax.swing.JMenuItem();
        mnui_tipoProductoVP = new javax.swing.JMenuItem();
        mnui_marcaVP = new javax.swing.JMenuItem();
        mnu_clienteVP = new javax.swing.JMenu();
        mnu_equiposVP = new javax.swing.JMenu();
        mnu_usuarioVP = new javax.swing.JMenu();
        mnu_producto_VP = new javax.swing.JMenu();
        mnu_compraVP = new javax.swing.JMenu();
        mnu_ventaVP = new javax.swing.JMenu();
        mnu_serviciosVP = new javax.swing.JMenu();
        mnu_servicioTecnicoVP = new javax.swing.JMenu();
        mnu_informesVP = new javax.swing.JMenu();
        mnu_cerrarSesionVP = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MENU PRINCIPAL");
        setExtendedState(6);
        setMinimumSize(new java.awt.Dimension(700, 500));
        setName("MENU PRINCIPAL"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        pnl_centralVP.setAutoscrolls(true);
        pnl_centralVP.setLayout(new java.awt.BorderLayout());

        dskp_principalVP.setAutoscrolls(true);

        javax.swing.GroupLayout dskp_principalVPLayout = new javax.swing.GroupLayout(dskp_principalVP);
        dskp_principalVP.setLayout(dskp_principalVPLayout);
        dskp_principalVPLayout.setHorizontalGroup(
            dskp_principalVPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 826, Short.MAX_VALUE)
        );
        dskp_principalVPLayout.setVerticalGroup(
            dskp_principalVPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );

        pnl_centralVP.add(dskp_principalVP, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnl_centralVP, java.awt.BorderLayout.CENTER);

        mnub_listadoVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N

        mnu_parametrosVP.setText("Parametros");
        mnu_parametrosVP.setEnabled(false);
        mnu_parametrosVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N

        mnui_localidadesVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnui_localidadesVP.setText("Localidades");
        mnui_localidadesVP.setFocusable(true);
        mnui_localidadesVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnui_localidadesVPMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mnui_localidadesVPMousePressed(evt);
            }
        });
        mnui_localidadesVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnui_localidadesVPActionPerformed(evt);
            }
        });
        mnu_parametrosVP.add(mnui_localidadesVP);

        mnui_provinciasVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnui_provinciasVP.setText("Provincias");
        mnui_provinciasVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnui_provinciasVPActionPerformed(evt);
            }
        });
        mnu_parametrosVP.add(mnui_provinciasVP);

        mnui_nivelesVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnui_nivelesVP.setText("Niveles de Usuario");
        mnui_nivelesVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnui_nivelesVPMouseClicked(evt);
            }
        });
        mnui_nivelesVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnui_nivelesVPActionPerformed(evt);
            }
        });
        mnu_parametrosVP.add(mnui_nivelesVP);

        mnui_tipoProductoVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnui_tipoProductoVP.setText("Tipo Producto");
        mnui_tipoProductoVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnui_tipoProductoVPActionPerformed(evt);
            }
        });
        mnu_parametrosVP.add(mnui_tipoProductoVP);

        mnui_marcaVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnui_marcaVP.setText("Marcas");
        mnui_marcaVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnui_marcaVPActionPerformed(evt);
            }
        });
        mnu_parametrosVP.add(mnui_marcaVP);

        mnub_listadoVP.add(mnu_parametrosVP);

        mnu_clienteVP.setText("Clientes");
        mnu_clienteVP.setEnabled(false);
        mnu_clienteVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_clienteVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_clienteVPMouseClicked(evt);
            }
        });
        mnu_clienteVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu_clienteVPActionPerformed(evt);
            }
        });
        mnub_listadoVP.add(mnu_clienteVP);

        mnu_equiposVP.setText("Equipos");
        mnu_equiposVP.setEnabled(false);
        mnu_equiposVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_equiposVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_equiposVPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_equiposVP);

        mnu_usuarioVP.setText("Usuarios");
        mnu_usuarioVP.setEnabled(false);
        mnu_usuarioVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_usuarioVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_usuarioVPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_usuarioVP);

        mnu_producto_VP.setText("Productos");
        mnu_producto_VP.setEnabled(false);
        mnu_producto_VP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_producto_VP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_producto_VPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_producto_VP);

        mnu_compraVP.setText(" Compras");
        mnu_compraVP.setEnabled(false);
        mnu_compraVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_compraVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_compraVPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_compraVP);

        mnu_ventaVP.setText("Ventas");
        mnu_ventaVP.setEnabled(false);
        mnu_ventaVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_ventaVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_ventaVPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_ventaVP);

        mnu_serviciosVP.setText("Servicios");
        mnu_serviciosVP.setEnabled(false);
        mnu_serviciosVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_serviciosVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_serviciosVPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_serviciosVP);

        mnu_servicioTecnicoVP.setText("Servicios Tecnico");
        mnu_servicioTecnicoVP.setEnabled(false);
        mnu_servicioTecnicoVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_servicioTecnicoVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_servicioTecnicoVPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_servicioTecnicoVP);

        mnu_informesVP.setText("Informes");
        mnu_informesVP.setEnabled(false);
        mnu_informesVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_informesVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_informesVPMouseClicked(evt);
            }
        });
        mnub_listadoVP.add(mnu_informesVP);

        mnu_cerrarSesionVP.setText("Cerrar Sesion");
        mnu_cerrarSesionVP.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        mnu_cerrarSesionVP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnu_cerrarSesionVPMouseClicked(evt);
            }
        });
        mnu_cerrarSesionVP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu_cerrarSesionVPActionPerformed(evt);
            }
        });
        mnub_listadoVP.add(mnu_cerrarSesionVP);

        setJMenuBar(mnub_listadoVP);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

    }//GEN-LAST:event_formComponentResized

    private void mnui_nivelesVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnui_nivelesVPMouseClicked

    }//GEN-LAST:event_mnui_nivelesVPMouseClicked

    private void mnu_clienteVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_clienteVPMouseClicked
        try {
            if (usuario.getNivel().getPermiso().isGestionCliente() == true) {
                gestionClientes gestionClientes = new gestionClientes(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionClientes);
                gestionClientes.setMaximum(true);
                gestionClientes.setVisible(true);

            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_clienteVPMouseClicked

    private void mnui_localidadesVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnui_localidadesVPMouseClicked

    }//GEN-LAST:event_mnui_localidadesVPMouseClicked

    private void mnui_localidadesVPMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnui_localidadesVPMousePressed

    }//GEN-LAST:event_mnui_localidadesVPMousePressed

    private void mnui_localidadesVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnui_localidadesVPActionPerformed

        try {
            if (this.usuario.getNivel().getPermiso().isGestionParametro() == true) {
                gestionLocalidades gestionLocalidades = new gestionLocalidades(cp, dskp_principalVP, usuario);
                dskp_principalVP.add(gestionLocalidades);
                gestionLocalidades.setMaximum(true);
                gestionLocalidades.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_mnui_localidadesVPActionPerformed

    private void mnui_provinciasVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnui_provinciasVPActionPerformed

        try {
            if (this.usuario.getNivel().getPermiso().isGestionParametro() == true) {
                gestionProvincias gestionProvincias = new gestionProvincias(cp, dskp_principalVP, usuario);
                dskp_principalVP.add(gestionProvincias);
                gestionProvincias.setMaximum(true);
                gestionProvincias.setVisible(true);
            } else {
                throw new Exception("No tiene el acceso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_mnui_provinciasVPActionPerformed

    private void mnui_nivelesVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnui_nivelesVPActionPerformed

        try {
            if (this.usuario.getNivel().getPermiso().isGestionParametro() == true) {
                gestionNiveles gestionNiveles = new gestionNiveles(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionNiveles);
                gestionNiveles.setMaximum(true);
                gestionNiveles.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_mnui_nivelesVPActionPerformed

    private void mnu_cerrarSesionVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu_cerrarSesionVPActionPerformed

    }//GEN-LAST:event_mnu_cerrarSesionVPActionPerformed

    private void mnu_cerrarSesionVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_cerrarSesionVPMouseClicked
        this.dispose();
        Login login = new Login(cp);
        login.setVisible(true);
    }//GEN-LAST:event_mnu_cerrarSesionVPMouseClicked

    private void mnu_clienteVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu_clienteVPActionPerformed


    }//GEN-LAST:event_mnu_clienteVPActionPerformed

    private void mnui_tipoProductoVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnui_tipoProductoVPActionPerformed

        try {
            if (this.usuario.getNivel().getPermiso().isGestionParametro() == true) {
                gestionTipoProducto gestionTipoProducto = new gestionTipoProducto(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionTipoProducto);
                gestionTipoProducto.setMaximum(true);
                gestionTipoProducto.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnui_tipoProductoVPActionPerformed

    private void mnui_marcaVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnui_marcaVPActionPerformed

        try {
            if (this.usuario.getNivel().getPermiso().isGestionParametro() == true) {
                gestionMarca gestionMarca = new gestionMarca(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionMarca);
                gestionMarca.setMaximum(true);
                gestionMarca.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnui_marcaVPActionPerformed

    private void mnu_usuarioVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_usuarioVPMouseClicked

        try {
            if (this.usuario.getNivel().getPermiso().isGestionUsuario() == true) {
                gestionUsuarios gestionUsuarios = new gestionUsuarios(cp, usuario);
                dskp_principalVP.add(gestionUsuarios);
                gestionUsuarios.setMaximum(true);
                gestionUsuarios.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_usuarioVPMouseClicked

    private void mnu_producto_VPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_producto_VPMouseClicked

        try {
            if (this.usuario.getNivel().getPermiso().isGestionProducto() == true) {
                gestionProducto gestionProducto = new gestionProducto(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionProducto);
                gestionProducto.setMaximum(true);
                gestionProducto.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_mnu_producto_VPMouseClicked

    private void mnu_compraVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_compraVPMouseClicked

        try {
            if (this.usuario.getNivel().getPermiso().isGestionCompra() == true) {
                gestionCompra gestionCompra = new gestionCompra(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionCompra);
                gestionCompra.setMaximum(true);
                gestionCompra.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_compraVPMouseClicked

    private void mnu_ventaVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_ventaVPMouseClicked

        try {
            if (this.usuario.getNivel().getPermiso().isGestionVenta() == true) {
                gestionVenta gestionventa = new gestionVenta(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionventa);
                gestionventa.setMaximum(true);
                gestionventa.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_ventaVPMouseClicked

    private void mnu_servicioTecnicoVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_servicioTecnicoVPMouseClicked
        try {
            if (this.usuario.getNivel().getPermiso().isGestionServicioTecnico() == true) {
                gestionServicioTecnico gestionServicioTecnico = new gestionServicioTecnico(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionServicioTecnico);
                gestionServicioTecnico.setMaximum(true);
                gestionServicioTecnico.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_servicioTecnicoVPMouseClicked

    private void mnu_equiposVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_equiposVPMouseClicked
        try {
            if (this.usuario.getNivel().getPermiso().isGestionEquipo() == true) {
                gestionEquipo gestionEquipo = new gestionEquipo(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionEquipo);
                gestionEquipo.setMaximum(true);
                gestionEquipo.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_equiposVPMouseClicked

    private void mnu_serviciosVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_serviciosVPMouseClicked
        try {
            if (this.usuario.getNivel().getPermiso().isGestionServicio() == true) {
                gestionServicio gestionServicio = new gestionServicio(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionServicio);
                gestionServicio.setMaximum(true);
                gestionServicio.setVisible(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_serviciosVPMouseClicked

    private void mnu_informesVPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnu_informesVPMouseClicked
        try {
            if (this.usuario.getNivel().getPermiso().isGestionInforme() == true) {
                gestionInforme gestionInforme = new gestionInforme(cp, usuario, dskp_principalVP);
                dskp_principalVP.add(gestionInforme);
                gestionInforme.setMaximum(true);
                gestionInforme.setVisible(true);
            } else {
                throw new Exception("No tiene el permiso necesario");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Ventana Principal", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnu_informesVPMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dskp_principalVP;
    private javax.swing.JMenu mnu_cerrarSesionVP;
    public static javax.swing.JMenu mnu_clienteVP;
    public static javax.swing.JMenu mnu_compraVP;
    public static javax.swing.JMenu mnu_equiposVP;
    public static javax.swing.JMenu mnu_informesVP;
    public static javax.swing.JMenu mnu_parametrosVP;
    public static javax.swing.JMenu mnu_producto_VP;
    public static javax.swing.JMenu mnu_servicioTecnicoVP;
    public static javax.swing.JMenu mnu_serviciosVP;
    public static javax.swing.JMenu mnu_usuarioVP;
    public static javax.swing.JMenu mnu_ventaVP;
    public static javax.swing.JMenuBar mnub_listadoVP;
    private javax.swing.JMenuItem mnui_localidadesVP;
    private javax.swing.JMenuItem mnui_marcaVP;
    private javax.swing.JMenuItem mnui_nivelesVP;
    private javax.swing.JMenuItem mnui_provinciasVP;
    private javax.swing.JMenuItem mnui_tipoProductoVP;
    private javax.swing.JPanel pnl_centralVP;
    // End of variables declaration//GEN-END:variables
}
